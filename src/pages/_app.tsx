import React from 'react';
import type { AppProps } from 'next/app';
import Head from 'next/head';

import { DefaultSeo } from 'next-seo';
import NextNProgress from 'nextjs-progressbar';
import { ToastContainer } from 'react-toastify';

import 'react-toastify/dist/ReactToastify.css';
import '@styles/globals.css';

import { withAppLayout } from '@components/main';
import { GlobalAuth, IAppContext, IWeb3Context } from '@src/context';
import { GetServerSideProps } from 'next/types';

// import { QueryClient, QueryClientProvider } from 'react-query';
// import { ReactQueryDevtools } from 'react-query/devtools';
// import { initializeTables } from '@src/services/knex/db';

import { initializeParse } from '@src/services/parser/initParse';
initializeParse();

function App({ Component, pageProps }: AppProps): React.JSX.Element {
  // const [queryClient] = React.useState(() => new QueryClient());

  return (
    <>
      <Head>
        <title>Marketplace Ether</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="favicon.ico" />
      </Head>
      <DefaultSeo
        openGraph={{
          type: 'website',
          locale: 'en_IE',
          title: 'Open Graph Title',
          description: 'Open Graph Description',
          url: 'https://example.com/',
          siteName: 'SiteName',
        }}
        twitter={{
          handle: '@handle',
          site: '@site',
          cardType: 'summary_large_image',
        }}
      />
      {/* <QueryClientProvider client={queryClient}> */}
      <NextNProgress />
      <Component {...pageProps} />
      {/* <ReactQueryDevtools initialIsOpen={false} /> */}
      <ToastContainer />
      {/* </QueryClientProvider> */}
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  // initializeTables();
  return {
    props: {},
  };
};

export default withAppLayout<AppProps & Record<string, unknown> & IAppContext & IWeb3Context & GlobalAuth>(App);
